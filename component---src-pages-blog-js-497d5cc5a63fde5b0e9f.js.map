{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["Projects","posts","data","allMarkdownRemark","edges","filter","post","node","frontmatter","title","length","path","includes","map","idx","color","postId","to","key","className","id","style","background","image","alt","src","routes","BLOG_IMAGE","parentId","borderColor","borderGap","borderWidth","transitionTime","pageQuery"],"mappings":"8UAce,SAASA,EAAT,GAA6B,IAGpCC,EAHmC,EAARC,KACVC,kBAAfC,MAEYC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,GACjCJ,EAAKC,KAAKC,YAAYG,KAAKC,SAAS,aACpEC,KAAI,WAAiBC,GAAS,IAAjBR,EAAgB,EAAtBC,KACEQ,EAAUT,EAAKE,YAAfO,MACFC,EAAM,qBAAwBF,EAEpC,OACE,kBAAC,IAAD,CAAMG,GAAIX,EAAKE,YAAYG,KAAMO,IAAKJ,GACpC,yBAAKK,UAAU,oBACbC,GAAKJ,EACLK,MAAO,CAAEC,WAAYhB,EAAKE,YAAYO,QACrCT,EAAKE,YAAYe,OAChB,yBAAKJ,UAAU,aACbK,IAAG,GAAMlB,EAAKE,YAAYC,MAC1BgB,IAASC,IAAOC,WAAb,IAA2BrB,EAAKE,YAAYe,QAEnD,6BACE,yBAAKJ,UAAU,QAAQE,MAAO,CAAEC,WAAYhB,EAAKE,YAAYO,SAC7D,yBAAKI,UAAU,cACb,+BAASb,EAAKE,YAAYC,SAG9B,kBAAC,IAAD,CACEmB,SAAWZ,EACXa,YAAcd,EACde,UAAY,EACZC,YAAc,EACdC,eAAe,eAM/B,OACE,kBAAC,IAAD,KACE,yBAAKb,UAAU,cACb,0CACA,yBAAKA,UAAU,SACXlB,GAEJ,kBAAC,IAAD,MACA,kBAAC,IAAD,QAMD,IAAMgC,EAAS","file":"component---src-pages-blog-js-497d5cc5a63fde5b0e9f.js","sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\nimport DynamicOutlines from 'dynamic-outlines';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../layouts';\n\nimport About from '../components/About';\nimport PageBreak from '../components/PageBreak';\n\nimport routes from '../constants/routes';\n\nimport './index.scss';\n\nexport default function Projects({ data }) {\n  const { edges } = data.allMarkdownRemark;\n\n  const posts = edges.filter(post => post.node.frontmatter.title.length > 0\n                                      && post.node.frontmatter.path.includes('/blog/'))\n        .map(({ node: post }, idx) => {\n          const { color } = post.frontmatter; \n          const postId = `blog-post-preview-${idx}`;\n  \n          return (\n            <Link to={post.frontmatter.path} key={idx}>\n              <div className=\"blog-post-preview\"\n                id={ postId }\n                style={{ background: post.frontmatter.color }}>\n                {post.frontmatter.image &&\n                  <img className=\"blog-image\"\n                    alt={ `${post.frontmatter.title}` }\n                    src={ `${routes.BLOG_IMAGE}/${post.frontmatter.image}` } />\n                }\n                <div>\n                  <div className=\"shade\" style={{ background: post.frontmatter.color }} />\n                  <div className=\"blog-title\">\n                    <h3>{ `${post.frontmatter.title}` }</h3>\n                  </div>\n                </div>\n                <DynamicOutlines\n                  parentId={ postId }\n                  borderColor={ color }\n                  borderGap={ 6 }\n                  borderWidth={ 4 }\n                  transitionTime=\"150ms\" />\n              </div>\n            </Link>\n          );\n        });\n\n  return (\n    <Layout>\n      <div className=\"index-page\">\n        <h2>Blog Posts</h2>\n        <div className=\"posts\">\n          { posts }\n        </div>\n        <About />\n        <PageBreak />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostsQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            image\n            color\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}