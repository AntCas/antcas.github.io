{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Email/index.js"],"names":["Index","edges","data","allMarkdownRemark","createCard","post","isProject","idx","color","frontmatter","postId","to","path","key","className","id","style","background","image","alt","title","src","routes","LOGO","BLOG_IMAGE","parentId","borderColor","borderGap","borderWidth","transitionTime","cardTypeFilter","pathString","node","length","includes","projectPosts","filter","map","blogPosts","pageQuery","Email","href"],"mappings":"0VAee,SAASA,EAAT,GAA0B,IAC/BC,EAD8B,EAARC,KACPC,kBAAfF,MAEFG,EAAa,SAACC,EAAMC,EAAWC,GAAS,IACpCC,EAAUH,EAAKI,YAAfD,MACFE,EAAM,qBAAwBH,EAEpC,OACE,kBAAC,IAAD,CAAMI,GAAIN,EAAKI,YAAYG,KAAMC,IAAKN,GACpC,yBAAKO,UAAU,oBACbC,GAAKL,EACLM,MAAO,CAAEC,WAAYZ,EAAKI,YAAYD,QACrCH,EAAKI,YAAYS,OAChB,yBAAKJ,UAAeR,EAAY,eAAiB,aAC/Ca,IAAG,GAAMd,EAAKI,YAAYW,MAC1BC,KAASf,EAAYgB,IAAOC,KAAOD,IAAOE,YAAvC,IAAsDnB,EAAKI,YAAYS,QAE5EZ,EAAY,GACV,6BACE,yBAAKQ,UAAU,QAAQE,MAAO,CAAEC,WAAYZ,EAAKI,YAAYD,SAC7D,yBAAKM,UAAU,cACb,+BAAST,EAAKI,YAAYW,SAIlC,kBAAC,IAAD,CACEK,SAAWf,EACXgB,YAAclB,EACdmB,UAAY,EACZC,YAAc,EACdC,eAAe,aAMnBC,EAAiB,SAACzB,EAAM0B,GAAgB,IAAD,EACnB1B,EAAK2B,KAAKvB,YAA1BW,EADmC,EACnCA,MAAOR,EAD4B,EAC5BA,KACf,OACEQ,EAAMa,OAAS,GAAKrB,EAAKsB,SAASH,IAIhCI,EAAelC,EAAMmC,QAAO,SAAA/B,GAAI,OAAIyB,EAAezB,EAAM,iBACpCgC,KAAK,WAAiB9B,GAAjB,IAASF,EAAT,EAAG2B,KAAH,OAAyB5B,EAAWC,GAAM,EAAME,MAE1E+B,EAAYrC,EAAMmC,QAAO,SAAA/B,GAAI,OAAIyB,EAAezB,EAAM,aACpCgC,KAAK,WAAiB9B,GAAjB,IAASF,EAAT,EAAG2B,KAAH,OAAyB5B,EAAWC,GAAM,EAAOE,MAE9E,OACE,kBAAC,IAAD,KACE,yBAAKO,UAAU,cACb,yBAAKA,UAAU,qBACb,+CACA,gEACA,kBAAC,IAAD,OAEF,iDACA,yBAAKA,UAAU,SACXwB,GAEJ,gDACA,yBAAKxB,UAAU,SACXqB,GAEJ,kBAAC,IAAD,MACA,kBAAC,IAAD,QAMD,IAAMI,EAAS,c,kCCvFtB,mCAYeC,IARD,kBACZ,yBAAK1B,UAAU,SACb,uBAAG2B,KAAK,0CAAR,iBACgB,0BAAM3B,UAAU,QAAhB,WADhB","file":"component---src-pages-index-js-86c7beee8241573db11c.js","sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\nimport DynamicOutlines from 'dynamic-outlines';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../layouts';\n\nimport About from '../components/About';\nimport Email from '../components/Email';\nimport PageBreak from '../components/PageBreak';\n\nimport routes from '../constants/routes';\n\nimport './index.scss';\n\nexport default function Index({ data }) {\n  const { edges } = data.allMarkdownRemark;\n\n  const createCard = (post, isProject, idx) => {\n    const { color } = post.frontmatter; \n    const postId = `blog-post-preview-${idx}`;\n\n    return (\n      <Link to={post.frontmatter.path} key={idx}>\n        <div className=\"blog-post-preview\"\n          id={ postId }\n          style={{ background: post.frontmatter.color }}>\n          {post.frontmatter.image &&\n            <img className={ `${isProject ? \"project-logo\" : \"blog-image\"}` }\n              alt={ `${post.frontmatter.title}` }\n              src={ `${isProject ? routes.LOGO : routes.BLOG_IMAGE }/${post.frontmatter.image}` } />\n          }\n          { isProject ? '' :\n              <div>\n                <div className=\"shade\" style={{ background: post.frontmatter.color }} />\n                <div className=\"blog-title\">\n                  <h3>{ `${post.frontmatter.title}` }</h3>\n                </div>\n              </div>\n          }\n          <DynamicOutlines\n            parentId={ postId }\n            borderColor={ color }\n            borderGap={ 6 }\n            borderWidth={ 4 }\n            transitionTime=\"150ms\" />\n        </div>\n      </Link>\n    );\n  };\n\n  const cardTypeFilter = (post, pathString) => {\n    const { title, path } = post.node.frontmatter;\n    return (\n      title.length > 0 && path.includes(pathString)\n    );\n  };\n\n  const projectPosts = edges.filter(post => cardTypeFilter(post, '/projects/'))\n                            .map( ({ node: post }, idx) => createCard(post, true, idx));\n\n  const blogPosts = edges.filter(post => cardTypeFilter(post, '/blog/'))\n                         .map( ({ node: post }, idx) => createCard(post, false, idx));\n\n  return (\n    <Layout>\n      <div className=\"index-page\">\n        <div className=\"front-page-header\">\n          <h1>Anthony Castrio</h1>\n          <h2>Product Management & Engineering</h2>\n          <Email />\n        </div>\n        <h2>Latest Blog Posts</h2>\n        <div className=\"posts\">\n          { blogPosts }\n        </div>\n        <h2>Projects + Teams</h2>\n        <div className=\"posts\">\n          { projectPosts }\n        </div>\n        <About />\n        <PageBreak />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            image\n            color\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\n\nimport './index.scss'\n\nconst Email = () => (\n  <div className=\"email\">\n    <a href=\"mailto:anthonycastrio+public@gmail.com\">\n      anthonycastrio<span className=\"hide\">+public</span>@gmail.com\n    </a>\n  </div>\n);\n\nexport default Email;\n"],"sourceRoot":""}